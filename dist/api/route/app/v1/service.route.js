"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const express_1 = __importDefault(require("express"));
const service_router = express_1.default.Router();
const connect_multiparty_1 = __importDefault(require("connect-multiparty"));
const multipartMiddleware = (0, connect_multiparty_1.default)();
const validation_1 = require("../../../middlewares/validation");
const auth_1 = require("../../../middlewares/auth");
const service_controller_1 = require("../../../controller/app/v1/service.controller");
const service_dto_1 = require("./../../../dto/app/v1/service_dto");
service_router.post("/add_service", auth_1.userAuth, multipartMiddleware, (0, validation_1.validateRequest)(service_dto_1.addServiceDto), service_controller_1.addService);
service_router.post("/add_multiple_service", auth_1.userAuth, multipartMiddleware, service_controller_1.addMultipleServices);
service_router.post("/edit_service", auth_1.userAuth, multipartMiddleware, (0, validation_1.validateRequest)(service_dto_1.editServiceDto), service_controller_1.editService);
service_router.post("/delete_service", auth_1.userAuth, multipartMiddleware, (0, validation_1.validateRequest)(service_dto_1.deleteServiceDto), service_controller_1.deleteService);
service_router.post("/like_dislike_service", auth_1.userAuth, multipartMiddleware, (0, validation_1.validateRequest)(service_dto_1.likeDislikeServicesDto), service_controller_1.likeDislikeServices);
service_router.post("/upload_service_media", auth_1.userAuth, multipartMiddleware, (0, validation_1.validateRequest)(service_dto_1.uploadServiceMediaDto), service_controller_1.uploadServiceMedia);
service_router.post("/remove_service_media", auth_1.userAuth, multipartMiddleware, (0, validation_1.validateRequest)(service_dto_1.removeServiceMediaDto), service_controller_1.removeServiceMedia);
service_router.post("/service_detail", auth_1.userAuth, multipartMiddleware, (0, validation_1.validateRequest)(service_dto_1.serviceDetailsDto), service_controller_1.serviceDetails);
service_router.post("/guest_service_detail", multipartMiddleware, (0, validation_1.validateRequest)(service_dto_1.guestServiceDetailsDto), service_controller_1.guestServiceDetails);
service_router.post("/get_service_data", auth_1.userAuth, multipartMiddleware, (0, validation_1.validateRequest)(service_dto_1.serviceUpdatedDataDto), service_controller_1.serviceUpdatedData);
service_router.post("/service_list", auth_1.userAuth, multipartMiddleware, (0, validation_1.validateRequest)(service_dto_1.serviceListingDto), service_controller_1.serviceListing);
service_router.post("/guest_service_list", multipartMiddleware, (0, validation_1.validateRequest)(service_dto_1.guestServiceListingDto), service_controller_1.guestServiceListing);
service_router.post("/service_favorite_list", auth_1.userAuth, multipartMiddleware, (0, validation_1.validateRequest)(service_dto_1.serviceFavoriteListDto), service_controller_1.serviceFavoriteList);
service_router.post("/user_service_list", auth_1.userAuth, multipartMiddleware, (0, validation_1.validateRequest)(service_dto_1.userServiceListingDto), service_controller_1.userServiceListing);
service_router.post("/guest_user_service_list", multipartMiddleware, (0, validation_1.validateRequest)(service_dto_1.userServiceListingDto), service_controller_1.guestUserServiceList);
exports.default = service_router;
